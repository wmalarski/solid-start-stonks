// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Invoice {
  id             String   @id @default(uuid())
  createdAt      DateTime @default(now())
  userId         String
  buyerAddress1  String
  buyerAddress2  String
  buyerName      String
  buyerNip       String
  city           String
  date           DateTime
  invoiceTitle   String
  notes          String
  paymentAccount String
  paymentBank    String
  paymentMethod  String
  sellerAddress1 String
  sellerAddress2 String
  sellerName     String
  sellerNip      String
  serviceCount   Int
  servicePayed   Int
  servicePrice   Int
  serviceTitle   String
  serviceUnit    String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_in        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  invoices      Invoice[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
